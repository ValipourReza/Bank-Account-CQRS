version: '3.8'

services:
  # PostgreSQL برای Event Store
  postgres:
    image: postgres:15
    container_name: bank-postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: reza
      POSTGRES_PASSWORD: secret123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reza -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB برای Read Database
  mongodb:
    image: mongo:4.4
    container_name: bank-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - bank-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  # Apache Kafka + Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: bank-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - bank-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: bank-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - bank-network

    # Command Service
  command-service:
    build:
      context: .  # تغییر به پوشه اصلی
      dockerfile: command-service/Dockerfile
    container_name: bank-command-service
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: reza
      SPRING_DATASOURCE_PASSWORD: secret123
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - bank-network
    restart: unless-stopped

  # Query Service
  query-service:
    build:
      context: .  # تغییر به پوشه اصلی
      dockerfile: query-service/Dockerfile
    container_name: bank-query-service
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://admin:admin@mongodb:27017/bank_query_db?authSource=admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    networks:
      - bank-network
    restart: unless-stopped

networks:
  bank-network:
    driver: bridge

volumes:
  postgres_data:
  mongodb_data: